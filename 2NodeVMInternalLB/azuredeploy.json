{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username"
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Admin password"
        }
      },
      "prefix": {
        "type": "string",
        "metadata": {
          "description": "Prefix to use for VM names"
        }
      },
      "env": {
        "type": "string",
        "defaultValue": "dev",
        "allowedValues": [
            "dev",
            "prd"
        ],
        "metadata": {
            "description": "Is this resource for development or production"
          }

      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "locationShortCode": {
        "type": "string",
        "defaultValue": "uks",
        "allowedValues": [
          "uks"
        ],
        "metadata": {
          "description": "The shortcode location of the resource"
        }
    },
    "publicIpAddressType": {
      "type": "string"
  },
  "publicIpAddressSku": {
      "type": "string"
  },
      "diagnosticsStorageAccountName": {
        "type": "string"
    },
    "virtualMachineSize": {
        "type": "string",
        "allowedValues": [
            "Standard_B2ms",
            "Standard_B4ms"
        ]
    },
    "osDiskType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS"
      ]
  },
    "virtualNetworkId": {
      "type": "string"
   },
   "subnetName": {
    "type": "string",
  "metadata": {
      "description": "The subnet this resource should be on"
    }
},
  "tagValue": { 
    "type": "object",
    "defaultValue": { "SERVICE": "FTP" }
     }
  },
    "variables": {
      "publicIpAddressName":"[concat(parameters('prefix'),'-', parameters('locationShortCode'),'-', parameters('env'), '-pip')]",
      "availabilitySetName": "[concat(parameters('prefix'), '-', parameters('locationShortCode'), '-', parameters('env'), '-as')]",
      "vmName": "[concat(parameters('prefix'),'-', parameters('locationShortCode'),'-', parameters('env'))]",
      "loadBalancerName": "[concat(parameters('prefix'), '-', parameters('locationShortCode'), '-', parameters('env'), '-lb')]",
      "networkInterfaceName": "[concat(variables('vmName'), '-nic')]",
      "subnetRef": "[concat(parameters('virtualNetworkId'), '/subnets/', parameters('subnetName'))]",
      "numberOfInstances": 2,
      "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
    },
    "resources": [
      {
        "name": "[variables('publicIpAddressName')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2019-06-01",
        "location": "[parameters('location')]",
        "tags": "[parameters('tagValue')]",
        "properties": {
            "publicIPAllocationMethod": "[parameters('publicIpAddressType')]"
        },
        "sku": {
            "name": "[parameters('publicIpAddressSku')]"
        }
       
        },
      {
        "apiVersion": "2019-03-01",
        "type": "Microsoft.Compute/availabilitySets",
        "location": "[parameters('location')]",
        "name": "[variables('availabilitySetName')]",
        "tags": "[parameters('tagValue')]",
        "properties": {
          "PlatformUpdateDomainCount": 2,
          "PlatformFaultDomainCount": 2
        },
        "sku": {
          "name": "Aligned"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('networkInterfaceName'), '-', copyindex())]",
        "tags": "[parameters('tagValue')]",
        "location": "[parameters('location')]",
        "copy": {
          "name": "nicLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "dependsOn": [
          "[variables('loadBalancerName')]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                },
                "loadBalancerBackendAddressPools": [
                  {
                    "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                  }
                ]
              }
            }
          ]
        }
      },
      {        
        "name": "[variables('loadBalancerName')]",
        "type": "Microsoft.Network/loadBalancers",
        "apiVersion": "2018-04-01",

        "location": "[parameters('location')]",
        "sku": {
          "name": "Basic"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpAddressName'))]"
    ],
    "tags": "[parameters('tagValue')]",
    "properties": {
    "frontendIPConfigurations": [
      {
          "name": "LoadBalancerFrontEnd",
          "properties": {
              "publicIPAddress": {
                  "id": "[concat(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName')))]"
              }
          }
      }
  ], 
          "backendAddressPools": [
            {
              "name": "BackendPool1"
            }
          ],
          "loadBalancingRules": [
            {
              "properties": {
                "frontendIPConfiguration": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                },
                "backendAddressPool": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                },
                "probe": {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
                },
                "protocol": "Tcp",
                "frontendPort": 22,
                "backendPort": 22,
                "idleTimeoutInMinutes": 15
              },
              "Name": "lbrule"
            }
          ],
          "probes": [
            {
              "properties": {
                "protocol": "Tcp",
                "port": 22,
                "intervalInSeconds": 15,
                "numberOfProbes": 2
              },
              "name": "lbprobe"
            }
          ]
        }
      },
      {
        "apiVersion": "2019-03-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('vmName'), '-', copyindex())]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[variables('numberOfInstances')]"
        },
        "location": "[parameters('location')]",
        "tags": "[parameters('tagValue')]",
        "dependsOn": [
          "nicLoop",
          "[variables('availabilitySetName')]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('virtualMachineSize')]"
          },
          "osProfile": {
            "computerName": "[concat(variables('vmName'), '-', copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "MicrosoftWindowsServer",
              "offer": "WindowsServer",
              "sku": "2019-Datacenter",
              "version": "latest"
            },
            "osDisk": {
              "name": "[concat(variables('vmName'), '-', copyIndex())]",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[parameters('osDiskType')]"
            }
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'),  '-', copyindex()))]"
              }
            ]
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
            }
          }
        }
      }
    ]
  }